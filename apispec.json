{
    "openapi": "3.0.2",
    "info": {
        "title": "Simple To-Do API",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api"
        }
    ],
    "paths": {
        "/user": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "description": "Get current authenticated user.",
                "summary": "Get current authenticated user.",
                "responses": {
                    "200": {
                        "description": "Get current authenticated user successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "user:": {
                                            "$ref": "#/components/schemas/UserSchema"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, authentication is required but has failed or not yet been provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sign-up": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "description": "Register a new user.",
                "summary": "Register a new user.",
                "requestBody": {
                    "description": "Data to register a new user",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SignUpSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserSchema"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Authentication is not allowed when a user is already authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sign-in": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "description": "Authenticate an existing user.",
                "summary": "Authenticate an existing user.",
                "requestBody": {
                    "description": "Data to authenticate a user",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SignInSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User authenticated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserSchema"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Authentication is not allowed when a user is already authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sign-out": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "description": "Log out the authenticated user",
                "summary": "Log out the authenticated user",
                "responses": {
                    "200": {
                        "description": "User logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, authentication is required but has failed or not yet been provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/todos": {
            "get": {
                "tags": [
                    "To-Do"
                ],
                "description": "Retrieve a list of all to-do for the authenticated user",
                "summary": "Retrieve a list of all to-do",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the list of to-do items",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "todos": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TodosSchema"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, authentication is required but has failed or not yet been provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "To-Do"
                ],
                "description": "Create a new to-do item for the authenticated user",
                "summary": "Create a new to-do item",
                "requestBody": {
                    "description": "Data to create a new To-Do item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TodoRequestSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created a new to-do item",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "todo": {
                                            "$ref": "#/components/schemas/TodoSchema"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, authentication is required but has failed or not yet been provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/todos/{id}": {
            "patch": {
                "tags": [
                    "To-Do"
                ],
                "description": "Update a specific to-do for the authenticated user",
                "summary": "Update a specific to-do",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the To-Do to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Data to update the To-Do",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TodoRequestSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated the to-do",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "todo": {
                                            "$ref": "#/components/schemas/TodoSchema"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, authentication is required but has failed or not yet been provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "To-do not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "To-Do"
                ],
                "description": "Delete a specific to-do for the authenticated user",
                "summary": "Delete a specific to-do",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the To-Do to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the To-Do",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, authentication is required but has failed or not yet been provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "To-Do not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/todos/{id}/tasks": {
            "post": {
                "tags": [
                    "Task"
                ],
                "summary": "Create a new task for a specific To-Do",
                "description": "Create a new task associated with a specific To-Do identified by its unique ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the To-Do",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Data to create a new task",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaskRequestSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created a new task for the To-Do",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskSchema"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, authentication is required but has failed or not yet been provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "To-Do not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tasks/{id}": {
            "patch": {
                "tags": [
                    "Task"
                ],
                "summary": "Update a specific task",
                "description": "Update a specific task identified by its unique ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the task",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Data to update the task",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaskRequestSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated the specific task",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "task": {
                                            "$ref": "#/components/schemas/TaskSchema"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, authentication is required but has failed or not yet been provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Task"
                ],
                "summary": "Delete a specific task",
                "description": "Delete a specific task identified by its unique ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the task",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the specific task",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, authentication is required but has failed or not yet been provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tasks/{id}/steps": {
            "post": {
                "tags": [
                    "Step"
                ],
                "summary": "Create a new step for a specific task",
                "description": "Create a new step associated with a specific task identified by its unique ID.",
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of the task item",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Data to create a new step",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StepRequestSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created a new step for the task item",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 201
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Step created successfully."
                                        },
                                        "task": {
                                            "$ref": "#/components/schemas/StepSchema"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, authentication is required but has failed or not yet been provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/steps/{id}": {
            "patch": {
                "tags": [
                    "Step"
                ],
                "summary": "Update a specific step",
                "description": "Update a specific step identified by its unique ID",
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of the step",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Data to update the step",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StepRequestSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated the specified step",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Step updated successfully."
                                        },
                                        "step": {
                                            "$ref": "#/components/schemas/StepSchema"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, authentication is required but has failed or not yet been provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Step not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Step"
                ],
                "summary": "Delete a specific step",
                "description": "Delete a specific step identified by its unique ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the step",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the specific step",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, authentication is required but has failed or not yet been provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Step not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "DefaultResponse": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "number"
                    },
                    "status": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "ValidationError": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "number"
                    },
                    "status": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "field": {
                                    "type": "string",
                                    "description": "The name of the field that has an error."
                                },
                                "message": {
                                    "type": "string",
                                    "description": "The error message associated with the field."
                                }
                            }
                        }
                    }
                }
            },
            "SignUpSchema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Nanashi Mumei"
                    },
                    "email": {
                        "type": "string",
                        "example": "nanashimumei@email.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "nanashimumei"
                    }
                },
                "required": [
                    "name",
                    "email",
                    "password"
                ]
            },
            "SignInSchema": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "example": "nanashimumei@email.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "nanashimumei"
                    }
                },
                "required": [
                    "name",
                    "email",
                    "password"
                ]
            },
            "UserSchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Nanashi Mumei"
                    },
                    "email": {
                        "type": "string",
                        "example": "nanashimumei@gmail.com"
                    }
                }
            },
            "TodosSchema": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "number"
                        },
                        "name": {
                            "type": "string"
                        },
                        "tasks": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "example": 1
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "Task content"
                                    },
                                    "completed": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "steps": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "content": {
                                                    "type": "string",
                                                    "example": "Step content"
                                                },
                                                "completed": {
                                                    "type": "boolean",
                                                    "example": false
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "TodoSchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "TodoRequestSchema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "TaskSchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number",
                        "example": 1
                    },
                    "content": {
                        "type": "string",
                        "example": "Task content"
                    },
                    "completed": {
                        "type": "boolean",
                        "example": false
                    }
                }
            },
            "TaskRequestSchema": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "string"
                    }
                }
            },
            "StepSchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number",
                        "example": 1
                    },
                    "content": {
                        "type": "string",
                        "example": "Step content"
                    },
                    "completed": {
                        "type": "boolean",
                        "example": false
                    }
                }
            },
            "StepRequestSchema": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "string"
                    }
                }
            }
        }
    }
}